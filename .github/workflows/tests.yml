name: tests

on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  stub-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        stack: [react, vue] # add svelte to array after implementing installSvelteWithInertia
        laravel: [11]
        args: ["", --pest]
        include:
          - stack: vue
            args: --ssr --typescript
            laravel: 11
          - stack: react
            args: --ssr --typescript
            laravel: 11
          # Add the following block after created the svelte stub
         #- stack: svelte
            #args: --ssr --typescript
            #laravel: 11

    name: Test Stubs - Laravel ${{ matrix.laravel }} - ${{ matrix.stack }} ${{ matrix.args }}

    steps:
      - name: Install expect
        run: sudo apt-get install -y expect

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      - name: Setup Laravel
        run: |
          composer create-project laravel/laravel:^${{ matrix.laravel }} .
          composer require tooinfinity/flextra:@dev --no-interaction --no-update
          composer config repositories.flextra '{"type": "path", "url": "flextra"}' --file composer.json

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: 'flextra'

      - name: Install Flextra
        run: |
          composer update "tooinfinity/flextra:dev-main" --prefer-dist --no-interaction --no-progress -W
          expect <<EOF
          spawn php artisan flextra:install  ${{ matrix.stack }} ${{ matrix.args }}
          expect "Enter the name of the module:"
          send "Auth\r"
          expect eof
          EOF

      - name: Install NPM dependencies
        run: npm i

      - name: Compile assets
        run: npm run build

      - name: Execute tests
        run: ${{ matrix.args == '--pest' && 'vendor/bin/pest' || 'vendor/bin/phpunit' }}
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
