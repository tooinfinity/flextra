name: tests

on:
  push:
    branches:
      - main
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  stub-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        stack: [react, vue] # add svelte to array after implementing installSvelteWithInertia
        laravel: [11]
        args: ["", --pest]
        include:
          - stack: vue
            args: --ssr --typescript
            laravel: 11
          - stack: react
            args: --ssr --typescript
            laravel: 11
          # Add the following block after created the svelte stub
         #- stack: svelte
            #args: --ssr --typescript
            #laravel: 11

    name: Test Stubs - Laravel ${{ matrix.laravel }} - ${{ matrix.stack }} ${{ matrix.args }}

    steps:
      - name: Install expect
        run: sudo apt-get install -y expect

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: 'flextra'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      # Cache Composer packages
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.laravel }}-${{ hashFiles('flextra/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.laravel }}-
            ${{ runner.os }}-composer-

      # Cache Laravel installation
      - name: Cache Laravel
        id: laravel-cache
        uses: actions/cache@v3
        with:
          path: |
            ./vendor
            ./composer.lock
          key: laravel-${{ matrix.laravel }}-${{ hashFiles('flextra/composer.json') }}

      - name: Setup Laravel
        if: steps.laravel-cache.outputs.cache-hit != 'true'
        run: |
          composer create-project laravel/laravel:^${{ matrix.laravel }} .
          
          composer config repositories.flextra '{"type": "path", "url": "flextra"}' --file composer.json

      # Cache npm packages
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Flextra
        run: |
          composer update "tooinfinity/flextra:dev-main" --prefer-dist --no-interaction --no-progress -W
          expect <<EOF
          spawn php artisan flextra:install ${{ matrix.stack }} ${{ matrix.args }}
          expect "Enter the name of the module:"
          send "Auth\r"
          expect "Do you want to create a module? (Yes/No):"
          send "\r"
          expect eof
          EOF

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ matrix.stack }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ matrix.stack }}-

      - name: Install NPM dependencies
        run: npm install

      # Cache built assets
      - name: Cache built assets
        uses: actions/cache@v3
        with:
          path: public/build
          key: ${{ runner.os }}-built-assets-${{ matrix.stack }}-${{ hashFiles('resources/**') }}

      - name: Compile assets
        run: npm run build

      - name: Execute tests
        run: ${{ matrix.args == '--pest' && 'vendor/bin/pest' || 'vendor/bin/phpunit' }}
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"